//attendance

#include <SPI.h>
#include <MFRC522.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define SS_PIN 10
#define RST_PIN 9

MFRC522 mfrc522(SS_PIN, RST_PIN);
LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27, 16 columns, 2 rows

// Store UID status: true = inside, false = outside
struct User {
  String uid;
  String name;
  bool status;
};

User users[] = {
  {"9637105", "Santhosh", false},
  {"e65a3b9", "Siddhartha", false},
  {"a39f213", "Raja Sir", false},
  {"c5a4105", "Laxmi Sai", false},
  {"81b392", "ruthik", false},
  {"41a3a60", "Pavan", false}
};

const int numUsers = sizeof(users) / sizeof(users[0]);

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Scan your card");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) return;
  if (!mfrc522.PICC_ReadCardSerial()) return;

  // Read UID
  String uid = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uid += String(mfrc522.uid.uidByte[i], HEX);
  }

  Serial.print("Card UID: ");
  Serial.println(uid);

  bool found = false;

  for (int i = 0; i < numUsers; i++) {
    if (users[i].uid == uid) {
      found = true;
      users[i].status = !users[i].status; // toggle status

      String msg = users[i].name + (users[i].status ? " IN" : " OUT");
      Serial.println(msg);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(users[i].name);
      lcd.setCursor(0, 1);
      lcd.print(users[i].status ? "Entered" : "Exited");

      break;
    }
  }

  if (!found) {
    Serial.println("Unknown card");

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Unknown Card");
  }

  delay(2000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Scan your card");

  mfrc522.PICC_HaltA();
}
